# Discord Settings
TOKEN= # This is your bot token. You can get it from https://discord.com/developers
CLIENT_ID= # The Client ID linked to the Bot token above. This is used for Discord bot invites
OWNER_ID= # This would be your Discord ID. This will give you access to commands that others can't execute.

# Spotify Settings
# You can find these settings at https://developer.spotify.com/dashboard/applications
SPOTIFY_ID="" # Spotify Client ID
SPOTIFY_SECRET="" # Spotify Client Secret

# Example MongoDB URI Strings:
# mongodb://user:password@localhost:mongdbport
# mongodb://user@localhost:27017/dbName (Recommend putting behind a password unless it will be ran on the local machine and the port can't be accessed remotely.)
#
# It is best practice to check the documentation depending on how you setup MongoDB. Documentation Link: https://www.mongodb.com/docs/manual/reference/connection-string/
MONGO_URL="" # MongoDB URL.

# Bot Setup
PREFIX=& # Default bot prefix (Recommend slash commands as discord no longer supports prefixes)
EMBED_COLOR="0x303236" # Embed Color that will be used
LOGS= # Channel ID where logs will be stored for the bot.
ERROR_LOGS_CHANNEL= # Channel ID where error logs will be stored for the bot. It can be the same Channel ID as LOGS if you prefer.
IMG="https://media.discordapp.net/attachments/" # System Background Image
SUPPORT="https://dsc.gg/codexdev" # Support Server Invite Link
INVITE="https://discord.com/oauth2/authorize?client_id=<Replace with CLIENT_ID>&permissions=8&scope=bot%20applications.commands" # Bot Invite Link. This option has no use if bot is set to private.

# LavaLink Related Settings
NODE_HOST="lava.link" # Hostname for LavaLink Server
NODE_ID="" # LavaLink Node ID. Can set to anything to easily identify the node.
NODE_PORT=80 # LavaLink Server Port. Default: "80"
NODE_PASSWORD="CodeXDev" # LavaLink Password. Default: "CodeXDev"
NODE_SECURE="false" # Lavalink Server SSL Security. If the hostname is an IP address or SSL is not setup for LavaLink, then it is recommended to keep it at false.

# erela.js Search Platform.
#
# Default: "youtube music"
#
# Possibilities:
#     youtube music - Will prioritize the Music library provided to YouTube by Copyright Holders. Regular YouTube URLs still work in this case. There is cases where can occur when searching. If this occurs, then switch to "youtube" can resolve the issues for you.
#     youtube - Will use all of YouTube. Age restricted content will not work unless you have an Email and Password setup for application.yml in the LavaLink Server Configuration.
#     soundcloud - Will use the SoundCloud library to search for a song. This method can cause some issues as search results can be hit or miss. It is the limitations of SoundCloud API.
SEARCH_PLATFORM="youtube music" # This option sets the Default Platform that will be used for searching and playing music through the "/play" command or typing a song name in "botname-song-request" channel.
AGGREGATED_SEARCH_ORDER="youtube music,youtube,soundcloud" # Sets the order of Slash command's AutoComplete results. Do not recommend editing this unless you know what you are doing.
